from tornado import websocket
import tornado.web
import tornado.ioloop
from multiprocessing import Process

from pyzmq_stream_poller import *

class MainHandler(tornado.web.RequestHandler):
    def get(self):
        html = """
<html>
  <head>
    <title>Websocket - toy</title>
    <script type="text/javascript">
window.onload = function() {
var ws = new WebSocket("ws://192.168.28.128:8888/websocket");
ws.onopen = function() {
   //ws.send("Hello, world");
};
ws.onmessage = function (evt) {
   //alert(evt.data);
   //ws.close();
   console.log(evt.data);
};
}
</script>

        """
        self.write(html)

server_push_port = '5556'
server_pub_port  = '5558'
        
class EchoWebSocket(websocket.WebSocketHandler):
    def open(self):
        Process(target=server_push, args=(server_push_port,)).start()
        Process(target=server_pub, args=(server_pub_port,)).start()
        Process(target=client, args=(server_push_port,server_pub_port,self,)).start()

        print "WebSocket opened"

    def on_message(self, message):
        self.write_message(u"You said: " + message)

    def on_close(self):
        print "WebSocket closed"

app = tornado.web.Application([
    (r"/", MainHandler),
    (r"/websocket", EchoWebSocket),
        ])

if __name__ == "__main__":
    app.listen(8888)
    tornado.ioloop.IOLoop.instance().start()
